---
name: Publish Release

on:
  push:
    branches:
      - 'main'
      - 'master'

jobs:

  Tag:
    name: Create Tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      VERSION: ${{ steps.tag.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set tag ENV
        id: tag
        run: |
          echo "VERSION=v$(cat VERSION)" >> "$GITHUB_ENV"
          echo "VERSION=v$(cat VERSION)" >> "$GITHUB_OUTPUT"

      - name: Create Tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.VERSION }}',
              sha: context.sha
            })

  Release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - 'Tag'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ needs.Tag.outputs.VERSION }}

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ needs.Tag.outputs.VERSION }}
        run: |
          gh release create "${TAG}" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${TAG#v} / $(date '+%Y-%m-%d')"

  Build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - 'Tag'
      - 'Release'
    permissions:
      contents: read
    strategy:
      matrix:
        thread: [ 0, 1, 2 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ needs.Tag.outputs.VERSION }}

      - name: Get CI Commands
        uses: rebelmediausa/promci@v1

      - name: Run Build
        uses: ./.github/promci/actions/build
        with:
          promu_codesign_binary: jellyfin_exporter
          parallelism: 3
          thread: ${{ matrix.thread }}

  Publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - 'Tag'
      - 'Build'
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ needs.Tag.outputs.VERSION }}

      - name: Get CI Commands
        uses: rebelmediausa/promci@v1

      - name: Publish Release
        uses: ./.github/promci/actions/publish_release
        with:
          image_name: jellyfin-exporter
          image_arch: linux/amd64,linux/arm64,linux/386,linux/ppc64le,linux/riscv64,linux/s390x
          docker_hub_organization: ${{ secrets.DOCKER_HUB_ORG }}
          docker_hub_login: ${{ secrets.DOCKER_HUB_LOGIN }}
          docker_hub_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
